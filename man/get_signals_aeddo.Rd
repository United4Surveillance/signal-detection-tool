% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aeddo.R
\name{get_signals_aeddo}
\alias{get_signals_aeddo}
\title{Automated and Early Detection of Disease Outbreaks}
\usage{
get_signals_aeddo(
  data_aggregated,
  number_of_weeks = 52,
  population_size = 1,
  sig_level = 0.95,
  exclude_past_outbreaks = TRUE,
  k = 52 * 3,
  init_theta = c(rep(0, 4), 1),
  lower = c(-0.5, 1e-06, -6, -6, -6),
  upper = c(0.5, 1, 1, 1, 100),
  method = "L-BFGS-B"
)
}
\arguments{
\item{data_aggregated}{data.frame, aggregated data with case counts}

\item{number_of_weeks}{integer, specifying the number of weeks to generate alarms for}

\item{population_size}{The population size for the aeddo algorithm. Default is 1.}

\item{sig_level}{The quantile from the random effects distribution used for
defining the for outbreak detection threshold, a numeric value between 0 and
1.}

\item{exclude_past_outbreaks}{logical value indicating whether past outbreak
related observations should be excluded from future parameter estimation.}

\item{k}{An integer specifying the rolling window size employed for parameter
estimation.}

\item{init_theta}{Initial values for model parameters in optimization.}

\item{lower}{Lower bounds for optimization parameters.}

\item{upper}{Upper bounds for optimization parameters.}

\item{method}{The optimization method to use, either "BFGS"  (default) or
"L-BFGS-B".}
}
\value{
An object containing outbreak signals detected by the aeddo algorithm.
}
\description{
This function retrieves outbreak signals using the aeddo algorithm. It processes
surveillance data, aggregates it based on specified date variables, and applies
the aeddo algorithm to detect potential outbreaks.
}
\examples{
\dontrun{
data_aggregated <- input_example \%>\%
preprocess_data() \%>\%
aggregate_data() \%>\%
add_rows_missing_dates()
results <- get_signals_aeddo(data_aggregated)
}

}
\references{
For information on the aeddo algorithm, refer to the package documentation.
}
\seealso{
\code{\link{aeddo}} for details on the aeddo algorithm.
}
